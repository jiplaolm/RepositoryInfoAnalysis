remove.packages(c("bitops", "caTools", "digest", "evaluate", "formatR", "highr", "htmltools", "knitr", "markdown", "mime", "rmarkdown", "stringr", "yaml"))
packrat::snapshot(prompt = FALSE)
install.packages(c("rlist", "pipeR"))
repos <- "https://api.github.com/users/jiplaolm/repos?per_page=100&page=%d" %>>%
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
install.packages(c("boot", "class", "cluster", "foreign", "KernSmooth", "MASS", "nlme", "nnet", "rpart", "spatial", "survival"))
install.packages(c("boot", "class", "cluster", "foreign", "KernSmooth", "MASS", "nlme", "nnet", "rpart", "spatial", "survival"), lib="/Volumes/UserDataHD/mikel/git/RepositoryInfoAnalysis/packrat/lib-R")
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
packrat::init()
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
remove.packages("chron", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("chron", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("chron", lib="")
remove.packages("chron", lib="")
remove.packages("chron", lib="")
remove.packages("chron", lib="")
remove.packages("chron", lib="")
remove.packages("yaml", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("yaml", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("chron", lib="")
remove.packages("chron", lib="")
remove.packages("chron", lib="")
remove.packages("chron", lib="")
packrat::restore(prompt = FALSE)
remove.packages("rlist", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("yaml", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("XML", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("stringr", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("reshape2", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("Rcpp", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("plyr", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("pipeR", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("jsonlite", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("data.table", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
remove.packages("chron", lib="~/git/RepositoryInfoAnalysis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
install.packages(c("boot", "broom", "caret", "chron", "class", "cluster", "codetools", "colorspace", "data.table", "DEoptimR", "devtools", "digest", "dplyr", "DT", "evaluate", "foreach", "foreign", "formatR", "ggdendro", "ggplot2", "gridExtra", "gtable", "highr", "htmltools", "htmlwidgets", "httpuv", "httr", "iterators", "jsonlite", "KernSmooth", "knitr", "lattice", "lme4", "lpSolve", "lubridate", "manipulate", "maps", "markdown", "MASS", "Matrix", "memoise", "mgcv", "mime", "mnormt", "munsell", "nlme", "nnet", "pbkrtest", "plyr", "pryr", "psych", "quantreg", "R6", "randomForest", "Rcpp", "RCurl", "rJava", "rmarkdown", "roxygen2", "rpart", "rpivotTable", "rstudioapi", "scales", "shiny", "SparseM", "spatial", "stringi", "stringr", "survival", "tidyr", "xtable"), lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
packrat::restore(prompt = FALSE)
packrat::snapshot(prompt = FALSE)
remove.packages("Rcpp")
packrat::snapshot(prompt = FALSE)
install.packages(c("rlist", "pipeR"))
packrat::restore(prompt = FALSE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
library(curl)
curl_fetch_memory("-H 'Authorization: token e6547328e0e0cf2fcc407bc14c679ae10cdc00bc' https://api.github.com/orgs/EHUGasteiz/members")
h <- new_handle()
handle_setheaders(h , "Authorization: token" = "e6547328e0e0cf2fcc407bc14c679ae10cdc00bc")
curl("https://api.github.com/orgs/EHUGasteiz/members", handle=h)
con <- curl("https://api.github.com/orgs/EHUGasteiz/members", handle=h)
cat(readLines(con),sep="\n")
con <- curl("https://api.github.com/orgs/EHUGasteiz/members", handle=h)
cat(readLines(con),sep="\n")
tmp <- tempfile()
curl_download("https://api.github.com/orgs/EHUGasteiz/members", destfile = tmp, handle = h)
cat(readLines(tmp), sep = "\n")
h <- new_handle()
handle_setheaders(h , "Authorization: token" = "e6547328e0e0cf2fcc407bc14c679ae10cdc00bc")
tmp <- tempfile()
curl_download("https://api.github.com/orgs/EHUGasteiz/members", destfile = tmp, handle = h)
cat(readLines(tmp), sep = "\n")
handle_setheaders(h , "Authorization" = "e6547328e0e0cf2fcc407bc14c679ae10cdc00bc")
tmp <- tempfile()
curl_download("https://api.github.com/orgs/EHUGasteiz/members", destfile = tmp, handle = h)
cat(readLines(tmp), sep = "\n")
h <- new_handle()
handle_setheaders(h , "Authorization" = "e6547328e0e0cf2fcc407bc14c679ae10cdc00bc")
tmp <- tempfile()
curl_download("https://api.github.com/orgs/EHUGasteiz/members", destfile = tmp, handle = h)
cat(readLines(tmp), sep = "\n")
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
gtoken <- config(token="e6547328e0e0cf2fcc407bc14c679ae10cdc00bc")
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
gtoken
req <- GET("https://api.github.com/rate_limit", gtoken)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("RepositoryInfoAnalysis",
key = "c9250479230abb9a683b",
secret = "989e783ac469c5703dafe3db35c9fbe780ef1e86")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
GET("https://api.github.com/orgs/EHUGasteiz/members", add_headers(Authorization="token 6b23a812a26088dfc79a586bc9a4842d13269abc"))
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
packrat::snapshot(prompt = FALSE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
packrat::restore(prompt = FALSE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
source('~/git/RepositoryInfoAnalysis/testScript.R', echo=TRUE)
